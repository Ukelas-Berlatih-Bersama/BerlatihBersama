// [WARNING] This file is generated by running `$ qore codegen` on your root project, please do not edit

/// <reference types="@feedloop/qore-client" />
import { QoreSchema } from "@feedloop/qore-client";

declare module "@feedloop/qore-client" {
  type AssignmentTableRow = {
    id: string;
    name: string;
    description: string;
    type: "lks" | "latihan";
    deadline: Date;
    score: ScoreTableRow;
    module1: { nodes: Module1TableRow[] };
  };

  type GuruTableRow = {
    id: string;
    name: string;
    phoneNumber: string;
  };

  type SiswaTableRow = {
    id: string;
    name: string;
    kelas: string;
    kodeKelas: string;
    enrollment1: { nodes: Enrollment1TableRow[] };
    score: { nodes: ScoreTableRow[] };
  };

  type ScoreTableRow = {
    id: string;
    subject: string;
    subjectMatter: string;
    indicatorAssessment: string;
    studentName: StudentNameTableRow;
    assignment: { nodes: AssignmentTableRow[] };
  };

  type SubjectTableRow = {
    id: string;
    name: string;
    module: { nodes: ModuleTableRow[] };
    classroom: { nodes: ClassroomTableRow[] };
  };

  type ClassroomTableRow = {
    id: string;
    name: string;
    description: string;
    time: Date;
    teacher: { nodes: TeacherTableRow[] };
    siswa: { nodes: SiswaTableRow[] };
    subject: { nodes: SubjectTableRow[] };
  };

  type ModuleTableRow = {
    id: string;
    title: string;
    description: string;
    assignment: AssignmentTableRow;
    subject: { nodes: SubjectTableRow[] };
    image: string;
    url: string;
  };

  type MemberTableRow = {
    id: string;
    email: string;
    role: { id: string; displayField: string };
    password: string;
    nama: string;
    teacher: { nodes: TeacherTableRow[] };
    classroom5: { nodes: Classroom5TableRow[] };
    alamat: string;
    tanggalLahir: Date;
    jenisKelamin: "laki-laki" | "wanita";
  };

  type EnrollmentTableRow = {
    id: string;
    enrolledDate: Date;
    student: StudentTableRow;
  };

  type AllGuruViewRow = {
    read: {
      id: string;
      name: string;
      phoneNumber: string;
    };
    write: {
      name: string;
      phoneNumber: string;
    };
    params: {};
    actions: {};
    forms: {};
  };

  type AllSiswaViewRow = {
    read: {
      id: string;
      name: string;
      kodeKelas: string;
    };
    write: {
      name: string;
      kodeKelas: string;
    };
    params: {};
    actions: {};
    forms: {};
  };

  type AllScoreViewRow = {
    read: {
      id: string;
      subject: string;
      subjectMatter: string;
      indicatorAssessment: string;
      studentName: StudentNameTableRow;
    };
    write: {
      subject: string;
      subjectMatter: string;
      indicatorAssessment: string;
      studentName: string[];
    };
    params: {};
    actions: {};
    forms: {};
  };

  type AllMemberViewRow = {
    read: {
      id: string;
      email: string;
      role: { id: string; displayField: string };
      password: string;
      nama: string;
      alamat: string;
      tanggalLahir: Date;
      jenisKelamin: "laki-laki" | "wanita";
    };
    write: {
      email: string;
      password: string;
      nama: string;
      alamat: string;
      tanggalLahir: Date;
      jenisKelamin: "laki-laki" | "wanita";
    };
    params: {};
    actions: {};
    forms: {
      formRegistrasiSiswa: {
        email?: string;
        role?: string;
        password?: string;
      };
      formRegistrasiGuru: {
        email?: string;
        role?: string;
        password?: string;
      };
    };
  };

  type AllModuleViewRow = {
    read: {
      id: string;
      title: string;
      description: string;
      subject: { nodes: SubjectTableRow[] };
      image: string;
      assignment: AssignmentTableRow;
      url: string;
    };
    write: {
      title: string;
      description: string;
      subject: string[];
      image: string;
      assignment: string[];
      url: string;
    };
    params: {};
    actions: {};
    forms: {};
  };

  type AllEnrollmentViewRow = {
    read: {
      id: string;
      enrolledDate: Date;
      student: StudentTableRow;
    };
    write: {
      enrolledDate: Date;
      student: string[];
    };
    params: {};
    actions: {};
    forms: {};
  };

  type AllAssignmentViewRow = {
    read: {
      id: string;
      name: string;
      description: string;
      type: "lks" | "latihan";
      deadline: Date;
      score: ScoreTableRow;
    };
    write: {
      name: string;
      description: string;
      type: "lks" | "latihan";
      deadline: Date;
      score: string[];
    };
    params: {};
    actions: {};
    forms: {};
  };

  type AllSubjectViewRow = {
    read: {
      id: string;
      name: string;
      module: { nodes: ModuleTableRow[] };
      classroom: { nodes: ClassroomTableRow[] };
    };
    write: {
      name: string;
      module: string[];
      classroom: string[];
    };
    params: {};
    actions: {};
    forms: {};
  };

  type AllClassroomViewRow = {
    read: {
      id: string;
      name: string;
      description: string;
      time: Date;
      teacher: { nodes: TeacherTableRow[] };
      siswa: { nodes: SiswaTableRow[] };
      subject: { nodes: SubjectTableRow[] };
    };
    write: {
      name: string;
      description: string;
      time: Date;
      teacher: string[];
      siswa: string[];
      subject: string[];
    };
    params: {};
    actions: {};
    forms: {
      addNewClass: {
        name?: string;
        description?: string;
        time?: Date;
        teacher?: string[];
        siswa?: string[];
      };
    };
  };

  type ProjectSchema = {
    allGuru: AllGuruViewRow;
    allSiswa: AllSiswaViewRow;
    allScore: AllScoreViewRow;
    allMember: AllMemberViewRow;
    allModule: AllModuleViewRow;
    allEnrollment: AllEnrollmentViewRow;
    allAssignment: AllAssignmentViewRow;
    allSubject: AllSubjectViewRow;
    allClassroom: AllClassroomViewRow;
  };
}
